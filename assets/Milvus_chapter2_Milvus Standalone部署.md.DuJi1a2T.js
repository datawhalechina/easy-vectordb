import{_ as a,c as e,o as n,ag as t}from"./chunks/framework.iC72KZN-.js";const l="/easy-vectordb/images/fig2.png",i="/easy-vectordb/images/fig3.png",r="/easy-vectordb/images/fig4.png",p="/easy-vectordb/images/fig5.png",o="/easy-vectordb/images/fig6.png",d="/easy-vectordb/images/fig7.png",_=JSON.parse('{"title":"Milvus standlone部署","description":"","frontmatter":{},"headers":[],"relativePath":"Milvus/chapter2/Milvus Standalone部署.md","filePath":"Milvus/chapter2/Milvus Standalone部署.md","lastUpdated":1756795290000}'),u={name:"Milvus/chapter2/Milvus Standalone部署.md"};function c(m,s,g,b,h,v){return n(),e("div",null,[...s[0]||(s[0]=[t(`<h1 id="milvus-standlone部署" tabindex="-1">Milvus standlone部署 <a class="header-anchor" href="#milvus-standlone部署" aria-label="Permalink to &quot;Milvus standlone部署&quot;">​</a></h1><h2 id="_1-系统要求" tabindex="-1">1. 系统要求 <a class="header-anchor" href="#_1-系统要求" aria-label="Permalink to &quot;1. 系统要求&quot;">​</a></h2><ul><li><strong>操作系统</strong>：Linux（推荐 Ubuntu 20.04+ / CentOS 7+）或 Windows（需 Docker Desktop）</li><li>硬件要求： <ul><li>内存：≥ 8GB（建议 16GB 以上）</li><li>硬盘：≥ 50GB SSD（存储向量数据和日志）</li></ul></li><li>依赖项： <ul><li>Docker 19.03+ 和 Docker Compose 1.25.1+</li></ul></li></ul><blockquote><p>Milvus支持docker部署，因此在不同平台上具有较好的通用性，如果不了解docker 可以参考 <a href="https://github.com/datawhalechina/daily-interview/blob/master/%E5%BC%80%E5%8F%91/Docker%2B%E4%B8%87%E5%AD%97%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%8E%8C%E6%8F%A1.pdf" target="_blank" rel="noreferrer">Docker+万字教程</a></p></blockquote><h2 id="_2-milvus运行" tabindex="-1">2.Milvus运行 <a class="header-anchor" href="#_2-milvus运行" aria-label="Permalink to &quot;2.Milvus运行&quot;">​</a></h2><p>在 Microsoft Windows 上安装 Docker Desktop 后，就可以在管理员模式下通过 PowerShell 或 Windows 命令提示符访问 Docker CLI。你可以在 PowerShell、Windows Command Prompt 或 WSL 2 中运行 Docker Compose 来启动 Milvus。</p><p><strong>从 PowerShell 或 Windows 命令提示符</strong></p><ol><li>在管理员模式下右击并选择<strong>以管理员身份运行</strong>，打开 Docker Desktop。</li><li>在 PowerShell 或 Windows Command Prompt 中运行以下命令，为 Milvus Standalone 下载 Docker Compose 配置文件并启动 Milvus。</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Download the configuration file and rename it as docker-compose.yml</span></span>
<span class="line"><span>C:\\&gt;Invoke-WebRequest https://github.com/milvus-io/milvus/releases/download/v2.4.15/milvus-standalone-docker-compose.yml -OutFile docker-compose.yml</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Start Milvus</span></span>
<span class="line"><span>C:\\&gt;docker compose up -d</span></span>
<span class="line"><span>Creating milvus-etcd  ... done</span></span>
<span class="line"><span>Creating milvus-minio ... done</span></span>
<span class="line"><span>Creating milvus-standalone ... done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>根据网络连接情况，下载用于安装 Milvus 的映像可能需要一段时间。名为<strong>milvus-</strong> <strong>standalone</strong>、<strong>milvus-minio</strong> 和<strong>milvus-etcd</strong>的容器启动后，你可以看到</p><ul><li><strong>milvus-etcd</strong>容器不向主机暴露任何端口，并将其数据映射到当前文件夹中的<strong>volumes/etcd</strong>。</li><li><strong>milvus-minio</strong>容器使用默认身份验证凭据在本地为端口<strong>9090</strong>和<strong>9091</strong>提供服务，并将其数据映射到当前文件夹中的<strong>volumes/minio</strong>。</li><li><strong>milvus-standalone</strong>容器使用默认设置为本地<strong>19530</strong>端口提供服务，并将其数据映射到当前文件夹中的<strong>volumes/milvus</strong>。</li></ul><p>如果安装了 WSL 2，还可以调用 Linux 版本的 Docker Compose 命令。</p><p><strong>从 WSL 2</strong></p><p>1.启动 WSL 2</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>C:\\&gt;wsl --install</span></span>
<span class="line"><span>Ubuntu already installed.</span></span>
<span class="line"><span>Starting Ubuntu...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>2.下载 Milvus 配置文件。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>wget https://github.com/milvus-io/milvus/releases/download/v2.4.17/milvus-standalone-docker-compose.yml -O docker-compose.yml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3.启动 Milvus。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo docker compose up -d</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Creating milvus-etcd  ... done</span></span>
<span class="line"><span>Creating milvus-minio ... done</span></span>
<span class="line"><span>Creating milvus-standalone ... done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+l+'" alt="milvus启动"></p><h2 id="_3-attu安装" tabindex="-1">3.Attu安装 <a class="header-anchor" href="#_3-attu安装" aria-label="Permalink to &quot;3.Attu安装&quot;">​</a></h2><p>Attu 是一款一体化的 milvus 管理工具，Attu 旨在管理和与 Milvus 交互，提供以下功能：</p><ul><li>**数据库、集合和分区管理：**有效地组织和管理您的 Milvus 设置。</li><li>**向量嵌入的插入、索引和查询：**轻松处理 Milvus 向量数据操作。</li><li>**执行矢量搜索：**使用矢量搜索功能快速验证您的结果。</li><li>**用户和角色管理：**轻松管理 Milvus 权限和安全性。</li><li>**查看系统拓扑：**可视化 Milvus 系统架构，以便更好地管理和优化。</li></ul><p>Attu 提供了2种安装的方法</p><h3 id="方法一、" tabindex="-1">方法一、 <a class="header-anchor" href="#方法一、" aria-label="Permalink to &quot;方法一、&quot;">​</a></h3><p>打开cmd命令行窗口，并执行以下代码</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ipconfig</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>找到如下IP（WSL (Hyper-V firewall) IPv4地址）</p><p><img src="'+i+`" alt="fig3"></p><p>2、执行安装attu</p><p>将以下命令中的{milvus server IP}替换<strong>成确保 Attu 容器可以访问 Milvus 的 IP 地址</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker run -p 8000:3000 -e MILVUS_URL={milvus server IP}:19530 zilliz/attu:v2.5.6</span></span>
<span class="line"><span>例如：</span></span>
<span class="line"><span>docker run -p 8000:3000 -e MILVUS_URL=172.X.X.1:19530 zilliz/attu:v2.5.6  # 根据实际的版本进行替换</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>需要注意的是，attu和milvus之间有兼容性问题，最好按照官方推荐的版本来</p><table tabindex="0"><thead><tr><th>Milvus 版本</th><th>推荐 Attu 版本</th></tr></thead><tbody><tr><td>2.5.x</td><td><a href="https://github.com/zilliztech/attu/releases/tag/v2.5.6" target="_blank" rel="noreferrer">v2.5.6</a></td></tr><tr><td>2.4.x</td><td><a href="https://github.com/zilliztech/attu/releases/tag/v2.4.12" target="_blank" rel="noreferrer">v2.4.12</a></td></tr><tr><td>2.3.x</td><td><a href="https://github.com/zilliztech/attu/releases/tag/v2.3.5" target="_blank" rel="noreferrer">v2.3.5</a></td></tr><tr><td>2.2.x</td><td><a href="https://github.com/zilliztech/attu/releases/tag/v2.2.8" target="_blank" rel="noreferrer">v2.2.8</a></td></tr><tr><td>2.1.x</td><td><a href="https://github.com/zilliztech/attu/releases/tag/v2.2.2" target="_blank" rel="noreferrer">v2.2.2</a></td></tr></tbody></table><p>等待执行完毕</p><p><img src="`+r+'" alt="fig4"></p><p>在浏览器打开：<a href="http://127.0.0.1:8000/" target="_blank" rel="noreferrer">http://127.0.0.1:8000/</a></p><p><img src="'+p+'" alt="fig5"></p><h3 id="方法二、" tabindex="-1">方法二、 <a class="header-anchor" href="#方法二、" aria-label="Permalink to &quot;方法二、&quot;">​</a></h3><p>attu 官方提供了windows系统独立安装包，<a href="https://github.com/zilliztech/attu/releases/tag/v2.5.8" target="_blank" rel="noreferrer">下载链接</a><img src="'+o+'" alt="fig6"></p><p>安装完成以后 <img src="'+d+'" alt="fig7"></p>',41)])])}const f=a(u,[["render",c]]);export{_ as __pageData,f as default};
